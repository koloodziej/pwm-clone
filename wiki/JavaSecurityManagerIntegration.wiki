#summary Integrating PWM with Java Security Manager

=Introduction=

Configuring Tomcat's Java Security Manager (JSM) properly can be very painful and it seems most people just don't bother using it. However, Security Manager makes it very difficult for any potential security holes in PWM to be used for malicious purposes. For generic information about the JSM take a look at these pages:

 * http://java.sun.com/developer/onlineTraining/Programming/JDCBook/appA.html
 * http://tomcat.apache.org/tomcat-5.5-doc/security-manager-howto.html
 * http://java.sun.com/j2se/1.4.2/docs/guide/plugin/developer_guide/debugger.html

As the JSM rulesets are highly dependent on both the underlying OS, web container and PWM versions, this article is split into generic and specific sections.

=Generic debugging techniques for Tomcat=

The biggest problem with JSM integration is that it's often not obvious what Security Manager rules you need to add to make things works. You almost certainly have to add JSM debugging to Tomcat command-line. On Debian this is done by editing /etc/default/tomcat*<version*>:

{{{
JAVA_OPTS="-Djava.awt.headless=true -Xmx128M -Djava.security.debug=access"
}}}

After Tomcat is restarted, it starts spitting out "access allowed/denied" messages to it's logs. On Debian Lenny this is _/var/log/syslog_, and on Debian Squeeze _/var/log/tomcat6/catalina.out_. You can weed out failures with something like this:

{{{
$ tail -n 15000 <logfile>|grep "access denied"|cut -d " " -f 7-|sort|uniq -u
}}}

After spotting the failures, convert them into matching security manager rules and restart Tomcat. Repeat this as many times as necessary. Note that this setup can easily create gigabytes worth of useless logs, so remember to switch off debugging before going to production.

On Debian and many other distributions Tomcat's JSM rules are stored in _/etc/tomcat*<version*>/policy.d_. These ruleset fragments are converted into the active ruleset stored in _/var/cache/tomcat*<version*>/catalina.policy_ or similar.
It's probably a good idea to make sure the pwm-specific policy file loads after the default policy files, so name it something like "50user.policy". Also make sure the file has the same permissions as the existing policy files or it may not load properly.

=Pwm 1.4.2 on Debian Lenny=

The additional ruleset below allows pwm to work properly under JSM under Debian Lenny + Tomcat 5.5.26 from Debian repos. It depends on the default Debian rules being loaded first.



{{{
// ========== PWM-specific settings =====================================
//
// Put this into a separate file, e.g. /etc/tomcat5.5/policy.d/50user.policy
//

grant {
	// With this everything works great, but it's terribly insecure
	//permission java.security.AllPermission;

	// This gets us past the first error
	permission java.lang.RuntimePermission "createClassLoader";

	// This gets us past pwm-db access issues. It seems we cannot use "<snip>/pwm/META-INF/pwm-db/-" without the whole
	// Tomcat breaking. Apparently this happens because the pwm-db directory is created on the fly and Security Manager
	// can't find it when it launches -> everything breaks badly.
	//
	// This set of FilePermissions seems to work and prevents the webapp from _writing_ to META-INF/context.xml,
	// which contains security-related settings (e.g. host/subnet-based filtering rules)
	permission java.io.FilePermission "/var/lib/tomcat5.5/webapps/pwm/META-INF/*", "read, execute";
	permission java.io.FilePermission "/var/lib/tomcat5.5/webapps/pwm/META-INF/pwm-db", "read, write, delete, execute";
	permission java.io.FilePermission "/var/lib/tomcat5.5/webapps/pwm/META-INF/pwm-db/-", "read, write, delete, execute";
	permission java.io.FilePermission "/var/lib/tomcat5.5/webapps/pwm/WEB-INF/classes/-", "read";

	// Misc FilePermissions
	permission java.io.FilePermission "/usr/share/javazi/ZoneInfoMappings", "read";
	permission java.io.FilePermission "/usr/share/tomcat5.5/server/classes/org/apache/jk/common/HandlerRequest.class", "read";
	permission java.io.FilePermission "/usr/share/tomcat5.5/server/classes/org/apache/tomcat/util/buf/DateTool.class", "read";
	permission java.io.FilePermission "/WEB-INF/classes/org/apache/log4j/-", "read";
	
	// Misc RuntimePermissions
	permission java.lang.RuntimePermission "defineClassInPackage.java.lang";
	permission java.lang.RuntimePermission "defineClassInPackage.org.apache.jasper.runtime";
	permission java.lang.RuntimePermission "accessClassInPackage.sun.util.logging.*";
	permission java.lang.RuntimePermission "accessClassInPackage.org.apache.tomcat.*";

	// Misc PropertyPermissions
	permission java.util.PropertyPermission "elementAttributeLimit", "read";
	permission java.util.PropertyPermission "entityExpansionLimit", "read";
	permission java.util.PropertyPermission "javax.xml.parsers.DocumentBuilderFactory", "read";
	permission java.util.PropertyPermission "maxOccurLimit", "read";
	permission java.util.PropertyPermission "user.timezone", "write";
	permission java.util.PropertyPermission "memAdmin", "read";
	permission java.util.PropertyPermission "memLock", "read";
	permission java.util.PropertyPermission "memTree", "read";
	permission java.util.PropertyPermission "memTxn", "read";
	permission java.util.PropertyPermission "memTreeAdmin", "read";
	permission java.util.PropertyPermission "sun.arch.data.model", "read";

	// reCAPTCHA-specific PropertyPermissions
	permission java.util.PropertyPermission "httpclient.*", "read";
	permission java.util.PropertyPermission "apache.commons.httpclient.*", "read";
	permission java.util.PropertyPermission "java.class.path", "read";
	permission java.util.PropertyPermission "user.name", "read";

	// reCAPTCHA-specific SocketPermissions
	permission java.net.SocketPermission "*","connect,resolve";

	// Misc SocketPermissions
	permission java.net.SocketPermission "127.0.0.1:389", "connect, resolve";

	// Log4j-specific properties
	permission java.util.PropertyPermission "log4j.*", "read";

	// BerkeleyDB-specific properties
	permission java.util.PropertyPermission "je.*", "read";
	permission java.util.PropertyPermission "JEDiagnostics", "read";
	permission java.util.PropertyPermission "JEMonitor", "read";

	// Misc permissions
	permission java.util.logging.LoggingPermission "control";
	permission ng.reflect.ReflectPermission "suppressAccessChecks";

};
}}}


=Pwm 1.5.2 on Debian Squeeze=